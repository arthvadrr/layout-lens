@use 'sass:math';

// Define the base color properties
$base-hue: 0;
$saturation: 50%;
$lightness: 60%;

// List of all non-deprecated HTML elements in uppercase
$elements: (
    A,
    ABBR,
    ADDRESS,
    AREA,
    ARTICLE,
    ASIDE,
    AUDIO,
    B,
    BASE,
    BDI,
    BDO,
    BLOCKQUOTE,
    BODY,
    BR,
    BUTTON,
    CANVAS,
    CAPTION,
    CITE,
    CODE,
    COL,
    COLGROUP,
    DATA,
    DATALIST,
    DD,
    DEL,
    DETAILS,
    DFN,
    DIALOG,
    DIV,
    DL,
    DT,
    EM,
    EMBED,
    FIELDSET,
    FIGCAPTION,
    FIGURE,
    FOOTER,
    FORM,
    H1,
    H2,
    H3,
    H4,
    H5,
    H6,
    HEAD,
    HEADER,
    HGROUP,
    HR,
    HTML,
    I,
    IFRAME,
    IMG,
    INPUT,
    INS,
    KBD,
    KEYGEN,
    LABEL,
    LEGEND,
    LI,
    LINK,
    MAIN,
    MAP,
    MARK,
    MENU,
    MENUITEM,
    META,
    METER,
    NAV,
    NOSCRIPT,
    OBJECT,
    OL,
    OPTGROUP,
    OPTION,
    OUTPUT,
    P,
    PARAM,
    PICTURE,
    PRE,
    PROGRESS,
    Q,
    RP,
    RT,
    RUBY,
    S,
    SAMP,
    SCRIPT,
    SECTION,
    SELECT,
    SMALL,
    SOURCE,
    SPAN,
    STRONG,
    STYLE,
    SUB,
    SUMMARY,
    SUP,
    SVG,
    TABLE,
    TBODY,
    TD,
    TEMPLATE,
    TEXTAREA,
    TFOOT,
    TH,
    THEAD,
    TIME,
    TITLE,
    TR,
    TRACK,
    U,
    UL,
    VAR,
    VIDEO,
    WBR
);

$element-colors: ();
$element-count: length($elements);

@for $i from 0 through $element-count - 1 {
    $element: nth($elements, $i + 1);
    $hue: $base-hue + math.div(360deg, $element-count) * $i;
    $color: hsl($hue, $saturation, $lightness);
    $element-colors: map-merge(
        $element-colors,
        (
            $element: $color,
        )
    );
}
// Apply the styles
@each $element, $color in $element-colors {
    .layoutlens__overlay.type-#{$element} .layoutlens__padding {
        background-color: $color;
    }
}
