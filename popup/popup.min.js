!function(){"use strict";const{browserAction:t,runtime:e,tabs:o}=browser;let n;new Promise(((t,e)=>{n=JSON.parse(localStorage.getItem("layoutLensState")),n?(console.log(n),t("Layout lens options found in popup")):(n={appToggle:!1,opacity:.5,currentTab:0,paddingColor:"#D8A658",marginColor:"#58CFD8"},localStorage.setItem("layoutLensState",JSON.stringify(n)),e("Layout lens options set"))})).then((t=>{console.log(t),a()})).catch((t=>{console.log(t),a()}));const a=()=>{const t=()=>{o.query({active:!0,currentWindow:!0}).then((t=>{const e=t[0];o.sendMessage(e.id,n)}))};document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("ll-toggle");!1===n.appToggle&&e.removeAttribute("checked");const o=document.getElementById("opacity-label"),a=document.getElementById("ll-opacity");a.value=n.opacity,o.innerText=`Opacity ${n.opacity}`,e.addEventListener("change",(e=>{((t,e)=>{n[e]=!!t.target.checked})(e,"appToggle"),localStorage.setItem("layoutLensState",JSON.stringify(n)),t()})),a.addEventListener("input",(e=>{const a=e.target.value;n.opacity=e.target.value,o.innerText=`Opacity ${a}`,localStorage.setItem("layoutLensState",JSON.stringify(n)),t()}))}))}}();
